{"version":3,"file":"static/js/534.be0d7f36.chunk.js","mappings":"+RAGaA,EAAoBC,EAAAA,GAAAA,GAAH,0ZAiBjBC,GAAYD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,8aAoBTG,EAAQH,EAAAA,GAAAA,GAAH,wR,SCUlB,MA5CA,WAAyB,IAAD,EACtB,GAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAajB,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,8GAECC,EAAAA,EAAAA,MAFD,cAEZC,EAFY,OAGlBN,EAAUM,GAHQ,mDAMlBC,QAAQC,IAAR,MANkB,yDAAH,qDASnBJ,GACD,GAAE,KAED,+BACE,iBAAKK,UAAU,YAAf,WACE,SAACZ,EAAD,8BACA,SAACJ,EAAD,oBACGM,EAAOW,eADV,aACG,EAAgBC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACnB,yBACE,UAACnB,EAAD,CAAWoB,GAAE,iBAAYH,GAAMI,MAAO,CAAEC,KAAMhB,GAA9C,WACE,gBACEiB,IACEL,EAAW,0CAC4BA,GACnCM,EAAAA,EAENC,IAAKN,EACLO,MAAO,IACPC,OAAQ,OAEV,wBAAKR,QAZAF,EADU,UAqB9B,ECpCD,EATa,WACX,OACE,+BACE,SAAC,EAAAW,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,EAAD,OAIP,C,+LCTDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHrB,EAAiB,mCAAG,oGACRoB,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBC,EADyB,yBAExBA,EAASrB,MAFe,2CAAH,qDAKjBsB,EAAY,mCAAG,WAAMhB,GAAN,uFACHa,EAAAA,EAAAA,IAAA,gBAAmBb,EAAnB,oBAAiCc,IAD9B,cACpBC,EADoB,yBAEnBA,EAASrB,MAFU,2CAAH,sDAIZuB,EAAO,mCAAG,WAAMjB,GAAN,uFACEa,EAAAA,EAAAA,IAAA,gBAAmBb,EAAnB,4BAAyCc,IAD3C,cACfC,EADe,yBAEdA,EAASrB,MAFK,2CAAH,sDAIPwB,EAAU,mCAAG,WAAMlB,GAAN,uFACDa,EAAAA,EAAAA,IAAA,gBAAmBb,EAAnB,4BAAyCc,IADxC,cAClBC,EADkB,yBAEjBA,EAASrB,MAFQ,2CAAH,sDAIVyB,EAAc,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,EAAAA,IAAA,6BACCO,EADD,oBACsBN,IAFjB,cACtBC,EADsB,yBAIrBA,EAASrB,MAJY,2CAAH,qD,sDCtBpB,IAAMa,EACX,6E","sources":["components/TrendingList/TrendingList.styled.js","components/TrendingList/TrendingList.jsx","page/Home.jsx","services/api.js","services/imgDefault.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const TrendingTodayList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 24px;\n  row-gap: 48px;\n  margin-bottom: 30px;\n  & li {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 460px;\n    border-radius: 0px 0px 4px 4px;\n    width: calc((100% - 72px) / 4);\n    box-shadow: 0px 1px 6px #ffbd33, 0px 1px 1px #ffbd33, 0px 2px 1px #ffbd33;\n    padding: 5px 0;\n  }\n`;\nexport const MovieLink = styled(Link)`\n  width: 264px;\n  background-image: linear-gradient(to right, violet, pink);\n  -webkit-background-clip: text;\n  background-clip: text;\n  color: transparent;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n  & img {\n    border-radius: 4px 4px 0px 0px;\n  }\n  & h3 {\n    height: 63px;\n    display: flex;\n    text-align: center;\n    align-items: center;\n  }\n`;\nexport const Title = styled.h2`\n  background-image: linear-gradient(to top, red, yellow);\n  -webkit-background-clip: text;\n  background-clip: text;\n  color: transparent;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 35px;\n  margin-bottom: 25px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getTrendingMovies } from 'services/api';\nimport { defaultImg } from 'services/imgDefault';\nimport { MovieLink, Title, TrendingTodayList } from './TrendingList.styled';\n\nfunction TrendingList() {\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n  useEffect(() => {\n    const trendingMovie = async () => {\n      try {\n        const data = await getTrendingMovies();\n        setMovies(data);\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    trendingMovie();\n  }, []);\n  return (\n    <>\n      <div className=\"container\">\n        <Title>Trending today</Title>\n        <TrendingTodayList>\n          {movies.results?.map(({ id, poster_path, title }) => (\n            <li key={id}>\n              <MovieLink to={`movies/${id}`} state={{ from: location }}>\n                <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                      : defaultImg\n                  }\n                  alt={title}\n                  width={264}\n                  height={396}\n                />\n                <h3>{title}</h3>\n              </MovieLink>\n            </li>\n          ))}\n        </TrendingTodayList>\n      </div>\n    </>\n  );\n}\n\nexport default TrendingList;\n","import TrendingList from 'components/TrendingList/TrendingList';\nimport { Suspense } from 'react';\n\nconst Home = () => {\n  return (\n    <>\n      <Suspense fallback={<div>Loading...</div>}>\n        <TrendingList />\n      </Suspense>\n    </>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '35e03337fca9c6068c8f09b84db34ce1';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const getCast = async id => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const getReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const getMovieByName = async movieName => {\n  const response = await axios.get(\n    `search/movie?query=${movieName}&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","export const defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n"],"names":["TrendingTodayList","styled","MovieLink","Link","Title","useState","movies","setMovies","location","useLocation","useEffect","trendingMovie","getTrendingMovies","data","console","log","className","results","map","id","poster_path","title","to","state","from","src","defaultImg","alt","width","height","Suspense","fallback","axios","API_KEY","response","getMovieById","getCast","getReviews","getMovieByName","movieName"],"sourceRoot":""}